local M = {}

function M.get()
    return {
        TitleString = { fg = C.fg },
        TitleIcon = { fg = C.blue },
        SagaBorder = { fg = C.fg, bg = C.none },
        SagaNormal = { bg = O.transparent_background and C.none or C.bg0 },
        SagaExpand = { fg = C.green },
        SagaCollapse = { fg = C.green },
        SagaCount = { fg = C.gray },
        SagaBeacon = { bg = C.bg2},
        ActionPreviewTitle = { fg = C.yellow, bg = O.transparent_background and C.none or C.bg0 },
        CodeActionText = { fg = C.green },
        CodeActionNumber = { fg = C.green },
        FinderSelection = { fg = C.blue, style = { "bold" } },
        FinderFileName = { fg = C.fg },
        FinderIcon = { fg = C.fg },
        FinderCount = { fg = C.purple },
        FinderType = { fg = C.fg },
        FinderSpinnerTitle = { fg = C.green, style = { "bold" } },
        FinderSpinner = { fg = C.green, style = { "bold" } },
        FinderVirtText = { fg = C.gray },
        RenameNormal = { fg = C.fg },
        DiagnosticSource = { fg = C.bg2 },
        DiagnosticPos = { fg = C.bg4 },
        DiagnosticWord = { fg = C.fg },
        DiagnosticHead = { fg = C.blue },
        CallHierarchyIcon = { fg = C.yellow },
        CallHierarchyTitle = { fg = C.yellow },
        SagaShadow = { bg = C.bg0 },
        OutlineIndent = { fg = C.bg2 },
        -- Lspkind icons support
        LspKindClass = { fg = C.blue },
        LspKindConstant = { fg = C.purple },
        LspKindConstructor = { fg = C.green },
        LspKindEnum = { fg = C.purple },
        LspKindEnumMember = { fg = C.purple },
        LspKindEvent = { fg = C.red },
        LspKindField = { fg = C.orange },
        LspKindFile = { fg = C.fg },
        LspKindFunction = { fg = C.green },
        LspKindInterface = { fg = C.blue },
        LspKindKey = { fg = C.red },
        LspKindMethod = { fg = C.green },
        LspKindModule = { fg = C.orange },
        LspKindNamespace = { fg = C.blue },
        LspKindNumber = { fg = C.purple },
        LspKindOperator = { fg = C.green },
        LspKindPackage = { fg = C.orange },
        LspKindProperty = { fg = C.orange },
        LspKindStruct = { fg = C.blue },
        LspKindTypeParameter = { fg = C.blue },
        LspKindVariable = { fg = C.fg },
        LspKindArray = { fg = C.orange },
        LspKindBoolean = { fg = C.purple },
        LspKindNull = { fg = C.gray },
        LspKindObject = { fg = C.blue },
        LspKindString = { fg = C.yellow },
        -- ccls-specific icons.
        LspKindTypeAlias = { fg = C.red },
        LspKindParameter = { fg = C.fg },
        LspKindStaticMethod = { fg = C.green },
        -- Microsoft-specific icons.
        LspKindText = { fg = C.fg },
        LspKindSnippet = { fg = C.fg },
        LspKindFolder = { fg = C.green },
        LspKindUnit = { fg = C.green },
        LspKindValue = { fg = C.purple },
    }
end

function M.custom_kind()
    return {
        File = { " ", "LspKindFile" },
        Module = { " ", "LspKindModule" },
        Namespace = { " ", "LspKindNamespace" },
        Package = { " ", "LspKindPackage" },
        Class = { " ", "LspKindClass" },
        Method = { " ", "LspKindMethod" },
        Property = { " ", "LspKindProperty" },
        Field = { " ", "LspKindField" },
        Constructor = { " ", "LspKindConstructor" },
        Enum = { "了", "LspKindEnum" },
        Interface = { " ", "LspKindInterface" },
        Function = { " ", "LspKindFunction" },
        Variable = { " ", "LspKindVariable" },
        Constant = { " ", "LspKindConstant" },
        String = { " ", "LspKindString" },
        Number = { " ", "LspKindNumber" },
        Boolean = { " ", "LspKindBoolean" },
        Array = { " ", "LspKindArray" },
        Object = { " ", "LspKindObject" },
        Key = { " ", "LspKindKey" },
        Null = { " ", "LspKindNull" },
        EnumMember = { " ", "LspKindEnumMember" },
        Struct = { " ", "LspKindStruct" },
        Event = { " ", "LspKindEvent" },
        Operator = { " ", "LspKindOperator" },
        TypeParameter = { " ", "LspKindTypeParameter" },
        TypeAlias = { " ", "LspKindTypeAlias" },
        Parameter = { " ", "LspKindParameter" },
        StaticMethod = { "ﴂ ", "LspKindStaticMethod" },
        Macro = { " ", "LspKindMacro" },
        Text = { " ", "LspKindText" },
        Snippet = { " ", "LspKindSnippet" },
        Folder = { " ", "LspKindFolder" },
        Unit = { " ", "LspKindUnit" },
        Value = { " ", "LspKindValue" },
    }
end

-- Backwards compatibility
function M.custom_colors()
    local C = require("luakai.palettes").get_palette()
    return {
        normal_bg = C.base,
        title_bg = C.green,
        red = C.red,
        magenta = C.maroon,
        orange = C.peach,
        yellow = C.yellow,
        green = C.green,
        cyan = C.sky,
        blue = C.blue,
        purple = C.mauve,
        white = C.text,
        black = C.crust,
    }
end

return M
